# -*- coding: utf-8 -*-
"""Read_vol.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KUYlTtfXXLJGLe_c0PdktEqK87GtUnHB
"""

from drive.MyDrive.Nocturne.OCTVol import OCTVol
oct_vol = OCTVol("/content/drive/MyDrive/Nocturne/EYE00043_49286_cropped_corrected.vol")
#/content/drive/MyDrive/Nocturne/OCTVol.py

oct_vol.header

import numpy as np
import datetime

class OCTVolModifier:
    """
    The OCTVolModifier class provides methods to modify header values of an OCTVol object and write it to a new vol file.

    Parameters:
    - oct_vol_path (str): Path to the OCTVol file.

    Methods:
    - modify_header_value(header_key, new_value): Modify a specific header value.
    - write_to_file(output_filename): Write the modified OCTVol data to a new vol file.
    """
    def __init__(self, oct_vol_path):
        self.oct_vol = OCTVol(oct_vol_path)

    def modify_header_value(self, header_key, new_value):
        """
        Modify a specific header value.

        Parameters:
        - header_key (str): The key of the header value to be modified.
        - new_value: The new value to set for the specified header key.
        """
        if header_key in self.oct_vol.header:
            # Check the data type of the original header value
            original_value = self.oct_vol.header[header_key]

            # Convert string to float if the original data type is numeric
            if isinstance(original_value, (int, float)) and isinstance(new_value, str):
                try:
                    new_value = float(new_value)
                except ValueError:
                    print(f"Error: Unable to convert '{new_value}' to float.")
                    return

            # Set the modified value
            self.oct_vol.header[header_key] = new_value
        else:
            print(f"Header key '{header_key}' not found.")

    def write_to_file(self, output_filename):
        """
        Write the modified OCTVol data to a new vol file.

        Parameters:
        - output_filename (str): The path to the new vol file.
        """
        with open(output_filename, 'wb') as vf:
            # Write header values to file
            for key, value in self.oct_vol.header.items():
                if key == 'distance' and key in self.oct_vol.updated_headers:
                    # Convert 'distance' to a NumPy array before calling tofile
                    np.array([value], dtype='float64').tofile(vf)
                elif isinstance(value, str):
                    # Handle string values by encoding them before writing
                    encoded_value = value.encode('utf-8')
                    for byte in encoded_value:
                        np.array([byte], dtype='int8').tofile(vf)
                elif isinstance(value, datetime.datetime):
                    # Convert datetime to timestamp and write as uint64
                    timestamp = int((value - datetime.datetime(1970, 1, 1)).total_seconds() * 1e7)
                    np.array([timestamp], dtype='uint64').tofile(vf)
                elif isinstance(value, datetime.date):
                    # Convert date to timestamp and write as float64
                    timestamp = (value - datetime.date(1970, 1, 1)).total_seconds()
                    np.array([timestamp], dtype='float64').tofile(vf)
                else:
                    value.tofile(vf)

# Example usage:
oct_vol_path = "/content/drive/MyDrive/Nocturne/EYE00043_49286_cropped_corrected.vol"
modifier = OCTVolModifier(oct_vol_path)

# Modify a specific header value with a specific data type
modifier.modify_header_value('distance', 123.45)

# Add the key to the list of updated headers
modifier.oct_vol.updated_headers = ['distance']

# Write the modified data to a new vol file
output_filename = "/content/drive/MyDrive/Nocturne/dcm_vol.vol"
modifier.write_to_file(output_filename)

from drive.MyDrive.Nocturne.OCTVol import OCTVol
new_vol = OCTVol("/content/drive/MyDrive/Nocturne/dcm_vol.vol")

new_vol.header